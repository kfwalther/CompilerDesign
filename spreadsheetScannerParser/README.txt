README.txt

author: Kevin Walther

My code is separated into four main class files and a Python script to run the 
program. The class files define Token, Cell, ParseTreeNode, and Scanner objects. 
The Token objects are used store values at the leaves of the parse tree (e.g. NUM,
ID, and Special Characters) while the ParseTreeNode objects create the nodes of the
parse tree. The Spreadsheet is comprised of a Python Dictionary of Cell objects. 
Each Cell object can be of type Equation, Number, Text, or Empty. The equation 
Cells that are encountered in the input file are parsed using a recursive descent 
algorithm defined based on the grammer rules provided in the instructions for the 
assignment. This parser builds the parse tree, calculates the equation value, and 
bubbles this calculated value up to the root node of the tree. In addition, the 
controller and user lists of each cell are updated as the parse tree is constructed. 
The Scanner object holds the entire Spreadsheet (dictionary of Cell objects) along 
with some other state-ful variables used during the parse. The Scanner has methods for
getting and clearing the contents of a specific cell also. 

The output file was generated by piping the programs output to a file. The output file
contains a printout of the parse tree starting from the root node. This is followed by
a printout of the spreadsheet, then a printout of the controller and user lists for each
cell in the spreadsheet. The input file used was the provided HW3-Input.txt file. 

This code can be run by calling the runScannerParser.py file. The code was tested on
Windows 7 using Python version 3.6.3

Although this assignment is nearing completion, the recalculation portion of the 
assignment is not yet implemented. Further work to implemented this functionality is 
required.

