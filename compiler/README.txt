README.txt

This Scanner/Parser code utilizes ANTLR 4 C++ tools to build a Symbol Table and a Parse Tree
based on input Lex and Grammar files. 

grammar/TLexer.g4
grammar/TParser.g4

Using CMake to generate the build environment for the project, we place all of the compiler
specific build files into the folder 'VS15W64'. It is named this way because I chose Visual
Studio 15 (2017) to build the code. After running CMake, the generated Visual Studio solution
can be opened and the project can be compiled. One of the targets generated by CMake calls 
a .jar file, which is used to auto-generate C++ code from the 'g4' grammar definition files. 
These generated files are placed in the 'demo/generated' directory. The wrapper code I wrote
to tie everything together and create the symbol table is located in the 'demo' folder. Once
the project is compiled, the executable will be placed in the 'VS15W64/demo/debug' folder. A
Windows batch script is provided in the top-level directory to call the executable and run 
the program. I built and tested this code on Windows 10.

After running the program with the input file C-Input-1.txt, I piped the output to an output
file called 'HW5-Output.txt' located in the top-level directory. The output prints some 
messages during the parse as various tokens are encountered. The completed parse tree is 
then printed in parenthetical form. Finally, the contents and attributes of the Symbol Table
are printed, and some attributes include the length of the lexeme, its enumerated type, and
its position encountered in the input. More attributes will be added to this table.

