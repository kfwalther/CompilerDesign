
****TOKENS*****
[@0,0:64='/* A program to perform Euclid's\n   Algorithm to compute gcd.  */',<12>,channel=2,1:0]
[@1,65:66='\n\n',<13>,channel=99,2:32]
[@2,67:69='int',<2>,4:0]
[@3,70:70=' ',<13>,channel=99,4:3]
[@4,71:73='gcd',<10>,4:4]
[@5,74:74=' ',<13>,channel=99,4:7]
[@6,75:75='(',<21>,4:8]
[@7,76:78='int',<2>,4:9]
[@8,79:79=' ',<13>,channel=99,4:12]
[@9,80:80='u',<10>,4:13]
[@10,81:81=',',<27>,4:14]
[@11,82:82=' ',<13>,channel=99,4:15]
[@12,83:85='int',<2>,4:16]
[@13,86:86=' ',<13>,channel=99,4:19]
[@14,87:87='v',<10>,4:20]
[@15,88:88=')',<22>,4:21]
[@16,89:89='\n',<13>,channel=99,4:22]
[@17,90:90='{',<23>,5:0]
[@18,91:91=' ',<13>,channel=99,5:1]
[@19,92:93='if',<4>,5:2]
[@20,94:94=' ',<13>,channel=99,5:4]
[@21,95:95='(',<21>,5:5]
[@22,96:96='v',<10>,5:6]
[@23,97:97=' ',<13>,channel=99,5:7]
[@24,98:99='==',<31>,5:8]
[@25,100:100=' ',<13>,channel=99,5:10]
[@26,101:101='0',<8>,5:11]
[@27,102:102=')',<22>,5:12]
[@28,103:103=' ',<13>,channel=99,5:13]
[@29,104:109='return',<7>,5:14]
[@30,110:110=' ',<13>,channel=99,5:20]
[@31,111:111='u',<10>,5:21]
[@32,112:112=' ',<13>,channel=99,5:22]
[@33,113:113=';',<28>,5:23]
[@34,114:116='\n  ',<13>,channel=99,5:24]
[@35,117:120='else',<5>,6:2]
[@36,121:121=' ',<13>,channel=99,6:6]
[@37,122:127='return',<7>,6:7]
[@38,128:128=' ',<13>,channel=99,6:13]
[@39,129:131='gcd',<10>,6:14]
[@40,132:132='(',<21>,6:17]
[@41,133:133='v',<10>,6:18]
[@42,134:134=',',<27>,6:19]
[@43,135:135='u',<10>,6:20]
[@44,136:136='-',<16>,6:21]
[@45,137:137='u',<10>,6:22]
[@46,138:138='/',<18>,6:23]
[@47,139:139='v',<10>,6:24]
[@48,140:140='*',<17>,6:25]
[@49,141:141='v',<10>,6:26]
[@50,142:142=')',<22>,6:27]
[@51,143:143=';',<28>,6:28]
[@52,144:146='\n  ',<13>,channel=99,6:29]
[@53,147:170='/* u-u/v*v == u mod v */',<12>,channel=2,7:2]
[@54,171:171='\n',<13>,channel=99,7:26]
[@55,172:172='}',<24>,8:0]
[@56,173:174='\n\n',<13>,channel=99,8:1]
[@57,175:178='void',<3>,10:0]
[@58,179:179=' ',<13>,channel=99,10:4]
[@59,180:183='main',<10>,10:5]
[@60,184:184='(',<21>,10:9]
[@61,185:188='void',<3>,10:10]
[@62,189:189=')',<22>,10:14]
[@63,190:190='\n',<13>,channel=99,10:15]
[@64,191:191='{',<23>,11:0]
[@65,192:192=' ',<13>,channel=99,11:1]
[@66,193:195='int',<2>,11:2]
[@67,196:196=' ',<13>,channel=99,11:5]
[@68,197:197='x',<10>,11:6]
[@69,198:198=';',<28>,11:7]
[@70,199:199=' ',<13>,channel=99,11:8]
[@71,200:202='int',<2>,11:9]
[@72,203:203=' ',<13>,channel=99,11:12]
[@73,204:204='y',<10>,11:13]
[@74,205:205=';',<28>,11:14]
[@75,206:208='\n  ',<13>,channel=99,11:15]
[@76,209:209='x',<10>,12:2]
[@77,210:210=' ',<13>,channel=99,12:3]
[@78,211:211='=',<14>,12:4]
[@79,212:212=' ',<13>,channel=99,12:5]
[@80,213:217='input',<10>,12:6]
[@81,218:218='(',<21>,12:11]
[@82,219:219=')',<22>,12:12]
[@83,220:220=';',<28>,12:13]
[@84,221:221=' ',<13>,channel=99,12:14]
[@85,222:222='y',<10>,12:15]
[@86,223:223=' ',<13>,channel=99,12:16]
[@87,224:224='=',<14>,12:17]
[@88,225:225=' ',<13>,channel=99,12:18]
[@89,226:230='input',<10>,12:19]
[@90,231:231='(',<21>,12:24]
[@91,232:232=')',<22>,12:25]
[@92,233:233=';',<28>,12:26]
[@93,234:236='\n  ',<13>,channel=99,12:27]
[@94,237:242='output',<10>,13:2]
[@95,243:243='(',<21>,13:8]
[@96,244:246='gcd',<10>,13:9]
[@97,247:247='(',<21>,13:12]
[@98,248:248='x',<10>,13:13]
[@99,249:249=',',<27>,13:14]
[@100,250:250='y',<10>,13:15]
[@101,251:251=')',<22>,13:16]
[@102,252:252=')',<22>,13:17]
[@103,253:253=';',<28>,13:18]
[@104,254:254='\n',<13>,channel=99,13:19]
[@105,255:255='}',<24>,14:0]
[@106,256:256='\n',<13>,channel=99,14:1]
[@107,257:256='<EOF>',<-1>,15:0]
Attempting parse of the program rule...
WARNING: Value v already in map...
WARNING: Value u already in map...
WARNING: Value v already in map...
WARNING: Value u already in map...
WARNING: Value u already in map...
WARNING: Value v already in map...
WARNING: Value v already in map...
WARNING: Value gcd already in map...
WARNING: Value x already in map...
WARNING: Value y already in map...
WARNING: Value input already in map...
WARNING: Value x already in map...
WARNING: Value y already in map...
WARNING: Value gcd already in map...
Completed parsing a program rule...
Printing the parse tree...
(program (declarationList (declarationList (declaration (funDeclaration (typeSpecifier int) gcd ( (params (paramList (paramList (param (typeSpecifier int) u)) , (param (typeSpecifier int) v))) ) (compoundStmt { localDeclaration (statementList statementList (statement (selectionStmt if ( (expression (simpleExpression (additiveExpression (term (factor (var v)))) (relop ==) (additiveExpression (term (factor 0))))) ) (statement (returnStmt return (expression (simpleExpression (additiveExpression (term (factor (var u)))))) ;)) else (statement (returnStmt return (expression (simpleExpression (additiveExpression (term (factor (call gcd ( (args (argList (argList (expression (simpleExpression (additiveExpression (term (factor (var v))))))) , (expression (simpleExpression (additiveExpression (additiveExpression (term (factor (var u)))) (addop -) (term (term (term (factor (var u))) (mulop /) (factor (var v))) (mulop *) (factor (var v)))))))) ))))))) ;))))) })))) (declaration (funDeclaration (typeSpecifier void) main ( (params void) ) (compoundStmt { (localDeclaration (localDeclaration localDeclaration (varDeclaration (typeSpecifier int) x ;)) (varDeclaration (typeSpecifier int) y ;)) (statementList (statementList (statementList statementList (statement (expressionStmt (expression (var x) = (expression (simpleExpression (additiveExpression (term (factor (call input ( args )))))))) ;))) (statement (expressionStmt (expression (var y) = (expression (simpleExpression (additiveExpression (term (factor (call input ( args )))))))) ;))) (statement (expressionStmt (expression (simpleExpression (additiveExpression (term (factor (call output ( (args (argList (expression (simpleExpression (additiveExpression (term (factor (call gcd ( (args (argList (argList (expression (simpleExpression (additiveExpression (term (factor (var x))))))) , (expression (simpleExpression (additiveExpression (term (factor (var y)))))))) ))))))))) ))))))) ;))) })))))

SYMBOL TABLE PRINTOUT
0, [@26,101:101='0',<8>,5:11]
gcd, [@39,129:131='gcd',<10>,6:14]
input, [@80,213:217='input',<10>,12:6]
main, [@59,180:183='main',<10>,10:5]
output, [@94,237:242='output',<10>,13:2]
u, [@9,80:80='u',<10>,4:13]
v, [@14,87:87='v',<10>,4:20]
x, [@68,197:197='x',<10>,11:6]
y, [@73,204:204='y',<10>,11:13]

